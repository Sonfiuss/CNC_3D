-- Kích hoạt extension cần thiết
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
CREATE EXTENSION IF NOT EXISTS "citext";

-- =============================================================================
-- ENUMS (CÁC KIỂU DỮ LIỆU TỰ ĐỊNH NGHĨA)
-- =============================================================================

CREATE TYPE ITEM_TYPE_ENUM AS ENUM ('PRODUCT', 'COMPONENT', 'RAW_MATERIAL', 'HARDWARE', 'PRODUCT_TEMPLATE');
CREATE TYPE ORDER_STATUS_ENUM AS ENUM ('DRAFT', 'PENDING', 'CONFIRMED', 'IN_PRODUCTION', 'SHIPPED', 'DELIVERED', 'CANCELLED', 'RETURNED');
CREATE TYPE PAYMENT_STATUS_ENUM AS ENUM ('PENDING', 'PAID', 'PARTIALLY_PAID', 'REFUNDED', 'FAILED');
CREATE TYPE SHIPMENT_STATUS_ENUM AS ENUM ('PICKING', 'PACKED', 'SHIPPED', 'DELIVERED', 'CANCELLED');
CREATE TYPE PRODUCTION_STATUS_ENUM AS ENUM ('PLANNED', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED');
CREATE TYPE DEFECT_SEVERITY_ENUM AS ENUM ('MINOR', 'MAJOR', 'CRITICAL');
CREATE TYPE ADDRESS_TYPE_ENUM AS ENUM ('BILLING', 'SHIPPING', 'WAREHOUSE', 'OTHER');

-- =============================================================================
-- TRIGGER FUNCTIONS
-- =============================================================================

CREATE OR REPLACE FUNCTION FN_SET_UPDATED_AT()
RETURNS TRIGGER AS $$
BEGIN
    NEW."UPDATED_AT" = now();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- =============================================================================
-- TABLES
-- =============================================================================

-- RBAC
CREATE TABLE "TUSERS" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "USERNAME" TEXT NOT NULL,
    "EMAIL" CITEXT,
    "PASSWORD_HASH" TEXT,
    "IS_ACTIVE" BOOLEAN DEFAULT TRUE,
    "META" JSONB DEFAULT '{}',
    "CREATED_AT" TIMESTAMPTZ DEFAULT now(),
    "UPDATED_AT" TIMESTAMPTZ DEFAULT now(),
    CONSTRAINT "UQ_TUSERS_USERNAME" UNIQUE ("USERNAME"),
    CONSTRAINT "UQ_TUSERS_EMAIL" UNIQUE ("EMAIL")
);

CREATE TABLE "TROLES" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "NAME" TEXT NOT NULL,
    "DESCRIPTION" TEXT,
    "CREATED_AT" TIMESTAMPTZ DEFAULT now(),
    CONSTRAINT "UQ_TROLES_NAME" UNIQUE ("NAME")
);

CREATE TABLE "TPERMISSIONS" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "RESOURCE" TEXT NOT NULL,
    "ACTION" TEXT NOT NULL,
    "DESCRIPTION" TEXT,
    CONSTRAINT "UQ_TPERMISSIONS_RESOURCE_ACTION" UNIQUE ("RESOURCE", "ACTION")
);

CREATE TABLE "TROLE_PERMISSIONS" (
    "ROLE_ID" UUID NOT NULL,
    "PERMISSION_ID" UUID NOT NULL,
    CONSTRAINT "PK_TROLE_PERMISSIONS" PRIMARY KEY ("ROLE_ID", "PERMISSION_ID"),
    CONSTRAINT "FK_TROLE_PERMISSIONS_ROLE_ID" FOREIGN KEY ("ROLE_ID") REFERENCES "TROLES"("ID") ON DELETE CASCADE,
    CONSTRAINT "FK_TROLE_PERMISSIONS_PERMISSION_ID" FOREIGN KEY ("PERMISSION_ID") REFERENCES "TPERMISSIONS"("ID") ON DELETE CASCADE
);

CREATE TABLE "TUSER_ROLES" (
    "USER_ID" UUID NOT NULL,
    "ROLE_ID" UUID NOT NULL,
    CONSTRAINT "PK_TUSER_ROLES" PRIMARY KEY ("USER_ID", "ROLE_ID"),
    CONSTRAINT "FK_TUSER_ROLES_USER_ID" FOREIGN KEY ("USER_ID") REFERENCES "TUSERS"("ID") ON DELETE CASCADE,
    CONSTRAINT "FK_TUSER_ROLES_ROLE_ID" FOREIGN KEY ("ROLE_ID") REFERENCES "TROLES"("ID") ON DELETE CASCADE
);

-- CONTACTS / CUSTOMERS
CREATE TABLE "TCONTACTS" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "FULL_NAME" TEXT NOT NULL,
    "EMAIL" CITEXT,
    "PHONE" TEXT,
    "META" JSONB DEFAULT '{}',
    "CREATED_AT" TIMESTAMPTZ DEFAULT now()
);

CREATE TABLE "TADDRESSES" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "ADDRESS_TYPE" ADDRESS_TYPE_ENUM DEFAULT 'OTHER',
    "LINE1" TEXT NOT NULL,
    "LINE2" TEXT,
    "CITY" TEXT,
    "STATE" TEXT,
    "POSTAL_CODE" TEXT,
    "COUNTRY_CODE" TEXT NOT NULL DEFAULT 'VN',
    "META" JSONB DEFAULT '{}',
    "CREATED_AT" TIMESTAMPTZ DEFAULT now()
);

CREATE TABLE "TCUSTOMERS" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "USER_ID" UUID,
    "CONTACT_ID" UUID NOT NULL,
    "NOTES" TEXT,
    "CREATED_AT" TIMESTAMPTZ DEFAULT now(),
    CONSTRAINT "FK_TCUSTOMERS_USER_ID" FOREIGN KEY ("USER_ID") REFERENCES "TUSERS"("ID") ON DELETE SET NULL,
    CONSTRAINT "FK_TCUSTOMERS_CONTACT_ID" FOREIGN KEY ("CONTACT_ID") REFERENCES "TCONTACTS"("ID") ON DELETE RESTRICT
);

CREATE TABLE "TCUSTOMER_ADDRESSES" (
    "CUSTOMER_ID" UUID NOT NULL,
    "ADDRESS_ID" UUID NOT NULL,
    "IS_DEFAULT" BOOLEAN DEFAULT FALSE,
    CONSTRAINT "PK_TCUSTOMER_ADDRESSES" PRIMARY KEY ("CUSTOMER_ID", "ADDRESS_ID"),
    CONSTRAINT "FK_TCUSTOMER_ADDRESSES_CUSTOMER_ID" FOREIGN KEY ("CUSTOMER_ID") REFERENCES "TCUSTOMERS"("ID") ON DELETE CASCADE,
    CONSTRAINT "FK_TCUSTOMER_ADDRESSES_ADDRESS_ID" FOREIGN KEY ("ADDRESS_ID") REFERENCES "TADDRESSES"("ID") ON DELETE CASCADE
);

CREATE TABLE "TLEADS" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "SOURCE" TEXT,
    "CONTACT_ID" UUID NOT NULL,
    "STATUS" TEXT,
    "META" JSONB DEFAULT '{}',
    "CREATED_AT" TIMESTAMPTZ DEFAULT now(),
    CONSTRAINT "FK_TLEADS_CONTACT_ID" FOREIGN KEY ("CONTACT_ID") REFERENCES "TCONTACTS"("ID")
);

-- CATALOG
CREATE TABLE "TPRODUCT_CATEGORIES" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "NAME" TEXT NOT NULL,
    "SLUG" TEXT,
    "PARENT_ID" UUID,
    "META" JSONB DEFAULT '{}',
    "CREATED_AT" TIMESTAMPTZ DEFAULT now(),
    CONSTRAINT "UQ_TPRODUCT_CATEGORIES_SLUG" UNIQUE ("SLUG"),
    CONSTRAINT "FK_TPRODUCT_CATEGORIES_PARENT_ID" FOREIGN KEY ("PARENT_ID") REFERENCES "TPRODUCT_CATEGORIES"("ID") ON DELETE SET NULL
);

CREATE TABLE "TUOMS" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "CODE" TEXT NOT NULL,
    "NAME" TEXT NOT NULL,
    CONSTRAINT "UQ_TUOMS_CODE" UNIQUE ("CODE")
);

CREATE TABLE "TSALES_CHANNELS" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "NAME" TEXT NOT NULL,
    "PLATFORM_URL" TEXT,
    "META" JSONB DEFAULT '{}',
    "CREATED_AT" TIMESTAMPTZ DEFAULT now(),
    CONSTRAINT "UQ_TSALES_CHANNELS_NAME" UNIQUE ("NAME")
);

-- ITEMS & PRICING
CREATE TABLE "TITEMS" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "PARENT_ID" UUID,
    "SKU" TEXT NOT NULL,
    "NAME" TEXT NOT NULL,
    "ITEM_TYPE" ITEM_TYPE_ENUM NOT NULL,
    "CATEGORY_ID" UUID,
    "UOM_ID" UUID NOT NULL,
    "STATUS" TEXT NOT NULL DEFAULT 'ACTIVE',
    "SPECS" JSONB NOT NULL DEFAULT '{}',
    "META" JSONB NOT NULL DEFAULT '{}',
    "CREATED_AT" TIMESTAMPTZ DEFAULT now(),
    "UPDATED_AT" TIMESTAMPTZ DEFAULT now(),
    CONSTRAINT "UQ_TITEMS_SKU" UNIQUE ("SKU"),
    CONSTRAINT "FK_TITEMS_PARENT_ID" FOREIGN KEY ("PARENT_ID") REFERENCES "TITEMS"("ID") ON DELETE CASCADE,
    CONSTRAINT "FK_TITEMS_CATEGORY_ID" FOREIGN KEY ("CATEGORY_ID") REFERENCES "TPRODUCT_CATEGORIES"("ID") ON DELETE SET NULL,
    CONSTRAINT "FK_TITEMS_UOM_ID" FOREIGN KEY ("UOM_ID") REFERENCES "TUOMS"("ID") ON DELETE RESTRICT
);

CREATE TABLE "TPRODUCT_PRICES" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "ITEM_ID" UUID NOT NULL,
    "SALES_CHANNEL_ID" UUID,
    "CURRENCY" TEXT NOT NULL DEFAULT 'VND',
    "PRICE" NUMERIC(18,2) NOT NULL CHECK ("PRICE" >= 0),
    "VALID_FROM" TIMESTAMPTZ NOT NULL DEFAULT now(),
    "VALID_TO" TIMESTAMPTZ,
    "CREATED_AT" TIMESTAMPTZ DEFAULT now(),
    CONSTRAINT "FK_TPRODUCT_PRICES_ITEM_ID" FOREIGN KEY ("ITEM_ID") REFERENCES "TITEMS"("ID") ON DELETE CASCADE,
    CONSTRAINT "FK_TPRODUCT_PRICES_SALES_CHANNEL_ID" FOREIGN KEY ("SALES_CHANNEL_ID") REFERENCES "TSALES_CHANNELS"("ID") ON DELETE SET NULL
);

CREATE TABLE "TDESIGN_DOCUMENTS" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "CODE" TEXT NOT NULL,
    "NAME" TEXT NOT NULL,
    "DESCRIPTION" TEXT,
    "CREATED_AT" TIMESTAMPTZ DEFAULT now(),
    "CREATED_BY" UUID,
    CONSTRAINT "UQ_TDESIGN_DOCUMENTS_CODE" UNIQUE ("CODE"),
    CONSTRAINT "FK_TDESIGN_DOCUMENTS_CREATED_BY" FOREIGN KEY ("CREATED_BY") REFERENCES "TUSERS"("ID") ON DELETE SET NULL
);

CREATE TABLE "TDESIGN_DOCUMENT_VERSIONS" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "DOCUMENT_ID" UUID NOT NULL,
    "VERSION" INT NOT NULL,
    "FILE_URI" TEXT NOT NULL,
    "FILE_HASH" TEXT,
    "META" JSONB NOT NULL DEFAULT '{}',
    "CREATED_AT" TIMESTAMPTZ DEFAULT now(),
    "CREATED_BY" UUID,
    CONSTRAINT "UQ_TDESIGN_DOCUMENT_VERSIONS_DOC_VER" UNIQUE ("DOCUMENT_ID", "VERSION"),
    CONSTRAINT "FK_TDESIGN_DOCUMENT_VERSIONS_DOCUMENT_ID" FOREIGN KEY ("DOCUMENT_ID") REFERENCES "TDESIGN_DOCUMENTS"("ID") ON DELETE CASCADE,
    CONSTRAINT "FK_TDESIGN_DOCUMENT_VERSIONS_CREATED_BY" FOREIGN KEY ("CREATED_BY") REFERENCES "TUSERS"("ID") ON DELETE SET NULL
);

CREATE TABLE "TBOMS" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "PARENT_ITEM_ID" UUID NOT NULL,
    "CHILD_ITEM_ID" UUID NOT NULL,
    "DESIGN_DOCUMENT_VERSION_ID" UUID,
    "QUANTITY" NUMERIC(18,6) NOT NULL,
    "UOM_ID" UUID NOT NULL,
    "SCRAP_FACTOR" NUMERIC(6,4) NOT NULL DEFAULT 0,
    "VERSION" INT NOT NULL DEFAULT 1,
    "EFFECTIVE_FROM" TIMESTAMPTZ NOT NULL DEFAULT now(),
    "EFFECTIVE_TO" TIMESTAMPTZ,
    CONSTRAINT "FK_TBOMS_PARENT_ITEM_ID" FOREIGN KEY ("PARENT_ITEM_ID") REFERENCES "TITEMS"("ID") ON DELETE CASCADE,
    CONSTRAINT "FK_TBOMS_CHILD_ITEM_ID" FOREIGN KEY ("CHILD_ITEM_ID") REFERENCES "TITEMS"("ID") ON DELETE RESTRICT,
    CONSTRAINT "FK_TBOMS_DESIGN_DOCUMENT_VERSION_ID" FOREIGN KEY ("DESIGN_DOCUMENT_VERSION_ID") REFERENCES "TDESIGN_DOCUMENT_VERSIONS"("ID") ON DELETE RESTRICT,
    CONSTRAINT "FK_TBOMS_UOM_ID" FOREIGN KEY ("UOM_ID") REFERENCES "TUOMS"("ID") ON DELETE RESTRICT
);

CREATE TABLE "TITEM_DESIGN_DOCUMENTS" (
    "ITEM_ID" UUID NOT NULL,
    "DESIGN_DOCUMENT_VERSION_ID" UUID NOT NULL,
    "IS_PRIMARY" BOOLEAN NOT NULL DEFAULT FALSE,
    CONSTRAINT "PK_TITEM_DESIGN_DOCUMENTS" PRIMARY KEY ("ITEM_ID", "DESIGN_DOCUMENT_VERSION_ID"),
    CONSTRAINT "FK_TITEM_DESIGN_DOCUMENTS_ITEM_ID" FOREIGN KEY ("ITEM_ID") REFERENCES "TITEMS"("ID") ON DELETE CASCADE,
    CONSTRAINT "FK_TITEM_DESIGN_DOCUMENTS_DESIGN_DOC_VER_ID" FOREIGN KEY ("DESIGN_DOCUMENT_VERSION_ID") REFERENCES "TDESIGN_DOCUMENT_VERSIONS"("ID") ON DELETE CASCADE
);

-- PRODUCTION
CREATE TABLE "TPRODUCTION_WORK_ORDERS" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "ITEM_ID" UUID NOT NULL,
    "QUANTITY" NUMERIC(18,6) NOT NULL,
    "WAREHOUSE_ID" UUID,
    "PLANNED_START_AT" TIMESTAMPTZ,
    "PLANNED_END_AT" TIMESTAMPTZ,
    "STATUS" PRODUCTION_STATUS_ENUM NOT NULL DEFAULT 'PLANNED',
    "DESIGN_DOCUMENT_VERSION_ID" UUID,
    "META" JSONB NOT NULL DEFAULT '{}',
    "CREATED_AT" TIMESTAMPTZ NOT NULL DEFAULT now(),
    "CREATED_BY" UUID,
    CONSTRAINT "FK_TPRODUCTION_WORK_ORDERS_ITEM_ID" FOREIGN KEY ("ITEM_ID") REFERENCES "TITEMS"("ID") ON DELETE RESTRICT,
    -- WAREHOUSE_ID constraint will be added after TWAREHOUSES is created
    CONSTRAINT "FK_TPRODUCTION_WORK_ORDERS_DESIGN_DOC_VER_ID" FOREIGN KEY ("DESIGN_DOCUMENT_VERSION_ID") REFERENCES "TDESIGN_DOCUMENT_VERSIONS"("ID") ON DELETE SET NULL,
    CONSTRAINT "FK_TPRODUCTION_WORK_ORDERS_CREATED_BY" FOREIGN KEY ("CREATED_BY") REFERENCES "TUSERS"("ID") ON DELETE SET NULL
);

CREATE TABLE "TPRODUCTION_LOTS" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "LOT_NUMBER" TEXT NOT NULL,
    "WORK_ORDER_ID" UUID NOT NULL,
    "ITEM_ID" UUID NOT NULL,
    "PRODUCTION_DATE" DATE NOT NULL DEFAULT CURRENT_DATE,
    "EXPIRATION_DATE" DATE,
    "META" JSONB DEFAULT '{}',
    CONSTRAINT "UQ_TPRODUCTION_LOTS_LOT_NUMBER" UNIQUE ("LOT_NUMBER"),
    CONSTRAINT "FK_TPRODUCTION_LOTS_WORK_ORDER_ID" FOREIGN KEY ("WORK_ORDER_ID") REFERENCES "TPRODUCTION_WORK_ORDERS"("ID") ON DELETE RESTRICT,
    CONSTRAINT "FK_TPRODUCTION_LOTS_ITEM_ID" FOREIGN KEY ("ITEM_ID") REFERENCES "TITEMS"("ID") ON DELETE RESTRICT
);

-- WAREHOUSES & INVENTORY
CREATE TABLE "TWAREHOUSES" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "CODE" TEXT NOT NULL,
    "NAME" TEXT NOT NULL,
    "ADDRESS_ID" UUID,
    "META" JSONB NOT NULL DEFAULT '{}',
    "CREATED_AT" TIMESTAMPTZ DEFAULT now(),
    CONSTRAINT "UQ_TWAREHOUSES_CODE" UNIQUE ("CODE"),
    CONSTRAINT "FK_TWAREHOUSES_ADDRESS_ID" FOREIGN KEY ("ADDRESS_ID") REFERENCES "TADDRESSES"("ID") ON DELETE SET NULL
);

-- Add missing foreign key to TPRODUCTION_WORK_ORDERS
ALTER TABLE "TPRODUCTION_WORK_ORDERS" ADD CONSTRAINT "FK_TPRODUCTION_WORK_ORDERS_WAREHOUSE_ID" FOREIGN KEY ("WAREHOUSE_ID") REFERENCES "TWAREHOUSES"("ID") ON DELETE SET NULL;

CREATE TABLE "TINVENTORY_BALANCES" (
    "WAREHOUSE_ID" UUID NOT NULL,
    "ITEM_ID" UUID NOT NULL,
    "LOT_ID" UUID NOT NULL,
    "QUANTITY_ON_HAND" NUMERIC(18,6) NOT NULL DEFAULT 0,
    "QUANTITY_RESERVED" NUMERIC(18,6) NOT NULL DEFAULT 0,
    "UPDATED_AT" TIMESTAMPTZ NOT NULL DEFAULT now(),
    CONSTRAINT "PK_TINVENTORY_BALANCES" PRIMARY KEY ("WAREHOUSE_ID", "ITEM_ID", "LOT_ID"),
    CONSTRAINT "FK_TINVENTORY_BALANCES_WAREHOUSE_ID" FOREIGN KEY ("WAREHOUSE_ID") REFERENCES "TWAREHOUSES"("ID") ON DELETE CASCADE,
    CONSTRAINT "FK_TINVENTORY_BALANCES_ITEM_ID" FOREIGN KEY ("ITEM_ID") REFERENCES "TITEMS"("ID") ON DELETE CASCADE,
    CONSTRAINT "FK_TINVENTORY_BALANCES_LOT_ID" FOREIGN KEY ("LOT_ID") REFERENCES "TPRODUCTION_LOTS"("ID") ON DELETE CASCADE
);

CREATE TABLE "TINVENTORY_TRANSACTIONS" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "WAREHOUSE_ID" UUID NOT NULL,
    "ITEM_ID" UUID NOT NULL,
    "LOT_ID" UUID,
    "QTY_CHANGE" NUMERIC(18,6) NOT NULL,
    "REASON" TEXT NOT NULL,
    "REFERENCE_TYPE" TEXT,
    "REFERENCE_ID" UUID,
    "OCCURRED_AT" TIMESTAMPTZ NOT NULL DEFAULT now(),
    "CREATED_BY" UUID,
    CONSTRAINT "FK_TINVENTORY_TRANSACTIONS_WAREHOUSE_ID" FOREIGN KEY ("WAREHOUSE_ID") REFERENCES "TWAREHOUSES"("ID") ON DELETE RESTRICT,
    CONSTRAINT "FK_TINVENTORY_TRANSACTIONS_ITEM_ID" FOREIGN KEY ("ITEM_ID") REFERENCES "TITEMS"("ID") ON DELETE RESTRICT,
    CONSTRAINT "FK_TINVENTORY_TRANSACTIONS_LOT_ID" FOREIGN KEY ("LOT_ID") REFERENCES "TPRODUCTION_LOTS"("ID") ON DELETE SET NULL,
    CONSTRAINT "FK_TINVENTORY_TRANSACTIONS_CREATED_BY" FOREIGN KEY ("CREATED_BY") REFERENCES "TUSERS"("ID") ON DELETE SET NULL
);

-- ORDERS / SALES / REVENUE
CREATE TABLE "TORDERS" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "ORDER_NUMBER" TEXT NOT NULL,
    "CUSTOMER_ID" UUID,
    "SALES_CHANNEL_ID" UUID,
    "STATUS" ORDER_STATUS_ENUM NOT NULL DEFAULT 'DRAFT',
    "ORDER_DATE" TIMESTAMPTZ NOT NULL DEFAULT now(),
    "REQUIRED_BY" TIMESTAMPTZ,
    "BILLING_ADDRESS_ID" UUID,
    "SHIPPING_ADDRESS_ID" UUID,
    "CURRENCY" TEXT NOT NULL DEFAULT 'VND',
    "TOTAL_AMOUNT" NUMERIC(18,2) NOT NULL DEFAULT 0,
    "NOTES" TEXT,
    "META" JSONB NOT NULL DEFAULT '{}',
    "CREATED_AT" TIMESTAMPTZ NOT NULL DEFAULT now(),
    "UPDATED_AT" TIMESTAMPTZ NOT NULL DEFAULT now(),
    CONSTRAINT "UQ_TORDERS_ORDER_NUMBER" UNIQUE ("ORDER_NUMBER"),
    CONSTRAINT "FK_TORDERS_CUSTOMER_ID" FOREIGN KEY ("CUSTOMER_ID") REFERENCES "TCUSTOMERS"("ID") ON DELETE SET NULL,
    CONSTRAINT "FK_TORDERS_SALES_CHANNEL_ID" FOREIGN KEY ("SALES_CHANNEL_ID") REFERENCES "TSALES_CHANNELS"("ID") ON DELETE SET NULL,
    CONSTRAINT "FK_TORDERS_BILLING_ADDRESS_ID" FOREIGN KEY ("BILLING_ADDRESS_ID") REFERENCES "TADDRESSES"("ID") ON DELETE SET NULL,
    CONSTRAINT "FK_TORDERS_SHIPPING_ADDRESS_ID" FOREIGN KEY ("SHIPPING_ADDRESS_ID") REFERENCES "TADDRESSES"("ID") ON DELETE SET NULL
);

CREATE TABLE "TORDER_ITEMS" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "ORDER_ID" UUID NOT NULL,
    "ITEM_ID" UUID NOT NULL,
    "QUANTITY" NUMERIC(18,6) NOT NULL,
    "UNIT_PRICE" NUMERIC(18,2) NOT NULL,
    "DISCOUNT" NUMERIC(18,2) NOT NULL DEFAULT 0,
    "TAX_AMOUNT" NUMERIC(18,2) NOT NULL DEFAULT 0,
    "LINE_TOTAL" NUMERIC(18,2) NOT NULL,
    "META" JSONB NOT NULL DEFAULT '{}',
    CONSTRAINT "FK_TORDER_ITEMS_ORDER_ID" FOREIGN KEY ("ORDER_ID") REFERENCES "TORDERS"("ID") ON DELETE CASCADE,
    CONSTRAINT "FK_TORDER_ITEMS_ITEM_ID" FOREIGN KEY ("ITEM_ID") REFERENCES "TITEMS"("ID") ON DELETE RESTRICT
);

CREATE TABLE "TORDER_STATUS_HISTORY" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "ORDER_ID" UUID NOT NULL,
    "STATUS" ORDER_STATUS_ENUM NOT NULL,
    "CHANGED_AT" TIMESTAMPTZ NOT NULL DEFAULT now(),
    "CHANGED_BY" UUID,
    CONSTRAINT "FK_TORDER_STATUS_HISTORY_ORDER_ID" FOREIGN KEY ("ORDER_ID") REFERENCES "TORDERS"("ID") ON DELETE CASCADE,
    CONSTRAINT "FK_TORDER_STATUS_HISTORY_CHANGED_BY" FOREIGN KEY ("CHANGED_BY") REFERENCES "TUSERS"("ID") ON DELETE SET NULL
);

CREATE TABLE "TPAYMENTS" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "ORDER_ID" UUID NOT NULL,
    "AMOUNT" NUMERIC(18,2) NOT NULL CHECK ("AMOUNT" >= 0),
    "STATUS" PAYMENT_STATUS_ENUM NOT NULL DEFAULT 'PENDING',
    "PAYMENT_METHOD" TEXT,
    "TRANSACTION_REF" TEXT,
    "PAID_AT" TIMESTAMPTZ,
    "CREATED_AT" TIMESTAMPTZ NOT NULL DEFAULT now(),
    CONSTRAINT "FK_TPAYMENTS_ORDER_ID" FOREIGN KEY ("ORDER_ID") REFERENCES "TORDERS"("ID") ON DELETE CASCADE
);

CREATE TABLE "TSHIPMENTS" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "ORDER_ID" UUID NOT NULL,
    "WAREHOUSE_ID" UUID,
    "SHIPPED_AT" TIMESTAMPTZ,
    "CARRIER" TEXT,
    "TRACKING_NUMBER" TEXT,
    "STATUS" SHIPMENT_STATUS_ENUM NOT NULL DEFAULT 'PICKING',
    "CREATED_AT" TIMESTAMPTZ NOT NULL DEFAULT now(),
    CONSTRAINT "FK_TSHIPMENTS_ORDER_ID" FOREIGN KEY ("ORDER_ID") REFERENCES "TORDERS"("ID") ON DELETE CASCADE,
    CONSTRAINT "FK_TSHIPMENTS_WAREHOUSE_ID" FOREIGN KEY ("WAREHOUSE_ID") REFERENCES "TWAREHOUSES"("ID") ON DELETE SET NULL
);

CREATE TABLE "TSHIPMENT_ITEMS" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "SHIPMENT_ID" UUID NOT NULL,
    "ORDER_ITEM_ID" UUID NOT NULL,
    "QUANTITY" NUMERIC(18,6) NOT NULL,
    CONSTRAINT "FK_TSHIPMENT_ITEMS_SHIPMENT_ID" FOREIGN KEY ("SHIPMENT_ID") REFERENCES "TSHIPMENTS"("ID") ON DELETE CASCADE,
    CONSTRAINT "FK_TSHIPMENT_ITEMS_ORDER_ITEM_ID" FOREIGN KEY ("ORDER_ITEM_ID") REFERENCES "TORDER_ITEMS"("ID") ON DELETE RESTRICT
);

CREATE TABLE "TSHIPMENT_ITEM_LOTS" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "SHIPMENT_ITEM_ID" UUID NOT NULL,
    "LOT_ID" UUID NOT NULL,
    "QUANTITY" NUMERIC(18,6) NOT NULL,
    CONSTRAINT "FK_TSHIPMENT_ITEM_LOTS_SHIPMENT_ITEM_ID" FOREIGN KEY ("SHIPMENT_ITEM_ID") REFERENCES "TSHIPMENT_ITEMS"("ID") ON DELETE CASCADE,
    CONSTRAINT "FK_TSHIPMENT_ITEM_LOTS_LOT_ID" FOREIGN KEY ("LOT_ID") REFERENCES "TPRODUCTION_LOTS"("ID") ON DELETE RESTRICT
);

CREATE TABLE "TORDER_FEEDBACK" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "ORDER_ID" UUID NOT NULL,
    "CUSTOMER_ID" UUID,
    "RATING" INT CHECK ("RATING" >= 1 AND "RATING" <= 5),
    "COMMENT" TEXT,
    "CREATED_AT" TIMESTAMPTZ NOT NULL DEFAULT now(),
    CONSTRAINT "FK_TORDER_FEEDBACK_ORDER_ID" FOREIGN KEY ("ORDER_ID") REFERENCES "TORDERS"("ID") ON DELETE CASCADE,
    CONSTRAINT "FK_TORDER_FEEDBACK_CUSTOMER_ID" FOREIGN KEY ("CUSTOMER_ID") REFERENCES "TCUSTOMERS"("ID") ON DELETE SET NULL
);

-- PRODUCTION (continued)
CREATE TABLE "TPRODUCTION_TASKS" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "WORK_ORDER_ID" UUID NOT NULL,
    "NAME" TEXT NOT NULL,
    "SEQUENCE_NO" INT NOT NULL,
    "STARTED_AT" TIMESTAMPTZ,
    "ENDED_AT" TIMESTAMPTZ,
    "OPERATOR_ID" UUID,
    "NOTES" TEXT,
    CONSTRAINT "FK_TPRODUCTION_TASKS_WORK_ORDER_ID" FOREIGN KEY ("WORK_ORDER_ID") REFERENCES "TPRODUCTION_WORK_ORDERS"("ID") ON DELETE CASCADE,
    CONSTRAINT "FK_TPRODUCTION_TASKS_OPERATOR_ID" FOREIGN KEY ("OPERATOR_ID") REFERENCES "TUSERS"("ID") ON DELETE SET NULL
);

CREATE TABLE "TPRODUCTION_CONSUMPTIONS" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "WORK_ORDER_ID" UUID NOT NULL,
    "ITEM_ID" UUID NOT NULL,
    "WAREHOUSE_ID" UUID,
    "QUANTITY_USED" NUMERIC(18,6) NOT NULL,
    "OCCURRED_AT" TIMESTAMPTZ NOT NULL DEFAULT now(),
    CONSTRAINT "FK_TPRODUCTION_CONSUMPTIONS_WORK_ORDER_ID" FOREIGN KEY ("WORK_ORDER_ID") REFERENCES "TPRODUCTION_WORK_ORDERS"("ID") ON DELETE CASCADE,
    CONSTRAINT "FK_TPRODUCTION_CONSUMPTIONS_ITEM_ID" FOREIGN KEY ("ITEM_ID") REFERENCES "TITEMS"("ID") ON DELETE RESTRICT,
    CONSTRAINT "FK_TPRODUCTION_CONSUMPTIONS_WAREHOUSE_ID" FOREIGN KEY ("WAREHOUSE_ID") REFERENCES "TWAREHOUSES"("ID") ON DELETE SET NULL
);

CREATE TABLE "TPRODUCTION_OUTPUTS" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "WORK_ORDER_ID" UUID NOT NULL,
    "ITEM_ID" UUID NOT NULL,
    "LOT_ID" UUID NOT NULL,
    "WAREHOUSE_ID" UUID,
    "QUANTITY_PRODUCED" NUMERIC(18,6) NOT NULL,
    "OCCURRED_AT" TIMESTAMPTZ NOT NULL DEFAULT now(),
    CONSTRAINT "FK_TPRODUCTION_OUTPUTS_WORK_ORDER_ID" FOREIGN KEY ("WORK_ORDER_ID") REFERENCES "TPRODUCTION_WORK_ORDERS"("ID") ON DELETE CASCADE,
    CONSTRAINT "FK_TPRODUCTION_OUTPUTS_ITEM_ID" FOREIGN KEY ("ITEM_ID") REFERENCES "TITEMS"("ID") ON DELETE RESTRICT,
    CONSTRAINT "FK_TPRODUCTION_OUTPUTS_LOT_ID" FOREIGN KEY ("LOT_ID") REFERENCES "TPRODUCTION_LOTS"("ID") ON DELETE RESTRICT,
    CONSTRAINT "FK_TPRODUCTION_OUTPUTS_WAREHOUSE_ID" FOREIGN KEY ("WAREHOUSE_ID") REFERENCES "TWAREHOUSES"("ID") ON DELETE SET NULL
);

CREATE TABLE "TPRODUCTION_DEFECTS" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "WORK_ORDER_ID" UUID NOT NULL,
    "DEFECT_TYPE" TEXT NOT NULL,
    "SEVERITY" DEFECT_SEVERITY_ENUM NOT NULL,
    "QUANTITY" NUMERIC(18,6) NOT NULL DEFAULT 1,
    "DESCRIPTION" TEXT,
    "OCCURRED_AT" TIMESTAMPTZ NOT NULL DEFAULT now(),
    CONSTRAINT "FK_TPRODUCTION_DEFECTS_WORK_ORDER_ID" FOREIGN KEY ("WORK_ORDER_ID") REFERENCES "TPRODUCTION_WORK_ORDERS"("ID") ON DELETE CASCADE
);

-- AUDIT
CREATE TABLE "TAUDIT_LOG" (
    "ID" UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    "ENTITY_TYPE" TEXT NOT NULL,
    "ENTITY_ID" UUID NOT NULL,
    "ACTION" TEXT NOT NULL,
    "USER_ID" UUID,
    "BEFORE_DATA" JSONB,
    "AFTER_DATA" JSONB,
    "CREATED_AT" TIMESTAMPTZ NOT NULL DEFAULT now(),
    CONSTRAINT "FK_TAUDIT_LOG_USER_ID" FOREIGN KEY ("USER_ID") REFERENCES "TUSERS"("ID") ON DELETE SET NULL
);

-- =============================================================================
-- INDEXES AND TRIGGERS
-- =============================================================================

-- Indexes
CREATE INDEX "IDX_TUSER_ROLES_USER_ID" ON "TUSER_ROLES"("USER_ID");
CREATE INDEX "IDX_TUSER_ROLES_ROLE_ID" ON "TUSER_ROLES"("ROLE_ID");
CREATE INDEX "IDX_TROLE_PERMISSIONS_ROLE_ID" ON "TROLE_PERMISSIONS"("ROLE_ID");
CREATE INDEX "IDX_TROLE_PERMISSIONS_PERMISSION_ID" ON "TROLE_PERMISSIONS"("PERMISSION_ID");
CREATE INDEX "IDX_TCONTACTS_EMAIL" ON "TCONTACTS"("EMAIL");
CREATE INDEX "IDX_TCONTACTS_PHONE" ON "TCONTACTS"("PHONE");
CREATE INDEX "IDX_TCUSTOMERS_USER_ID" ON "TCUSTOMERS"("USER_ID");
CREATE INDEX "IDX_TCUSTOMERS_CONTACT_ID" ON "TCUSTOMERS"("CONTACT_ID");
CREATE INDEX "IDX_TPRODUCT_CATEGORIES_PARENT_ID" ON "TPRODUCT_CATEGORIES"("PARENT_ID");
CREATE INDEX "IDX_TITEMS_ITEM_TYPE" ON "TITEMS"("ITEM_TYPE");
CREATE INDEX "IDX_TITEMS_CATEGORY_ID" ON "TITEMS"("CATEGORY_ID");
CREATE INDEX "IDX_TITEMS_PARENT_ID" ON "TITEMS"("PARENT_ID");
CREATE INDEX "IDX_TPRODUCT_PRICES_ITEM_TIME" ON "TPRODUCT_PRICES"("ITEM_ID", "SALES_CHANNEL_ID", "VALID_FROM" DESC);
CREATE INDEX "IDX_TBOMS_PARENT_ITEM_ID" ON "TBOMS"("PARENT_ITEM_ID");
CREATE INDEX "IDX_TINVENTORY_BALANCES_UPDATED_AT" ON "TINVENTORY_BALANCES"("UPDATED_AT" DESC);
CREATE INDEX "IDX_TINVENTORY_TRANSACTIONS_ITEM_TIME" ON "TINVENTORY_TRANSACTIONS"("ITEM_ID", "OCCURRED_AT" DESC);
CREATE INDEX "IDX_TORDERS_ORDER_DATE" ON "TORDERS"("ORDER_DATE" DESC);
CREATE INDEX "IDX_TORDERS_CUSTOMER_ID" ON "TORDERS"("CUSTOMER_ID");
CREATE INDEX "IDX_TORDER_ITEMS_ORDER_ID" ON "TORDER_ITEMS"("ORDER_ID");
CREATE INDEX "IDX_TSHIPMENTS_ORDER_ID" ON "TSHIPMENTS"("ORDER_ID");
CREATE INDEX "IDX_TSHIPMENT_ITEMS_SHIPMENT_ID" ON "TSHIPMENT_ITEMS"("SHIPMENT_ID");
CREATE INDEX "IDX_TSHIPMENT_ITEM_LOTS_LOT_ID" ON "TSHIPMENT_ITEM_LOTS"("LOT_ID");
CREATE INDEX "IDX_TPRODUCTION_LOTS_PRODUCTION_DATE" ON "TPRODUCTION_LOTS"("PRODUCTION_DATE");
CREATE INDEX "IDX_TAUDIT_LOG_ENTITY" ON "TAUDIT_LOG"("ENTITY_TYPE", "ENTITY_ID", "CREATED_AT" DESC);

-- Triggers for updated_at
CREATE TRIGGER "TRG_TUSERS_SET_UPDATED_AT" BEFORE UPDATE ON "TUSERS" FOR EACH ROW EXECUTE FUNCTION FN_SET_UPDATED_AT();
CREATE TRIGGER "TRG_TITEMS_SET_UPDATED_AT" BEFORE UPDATE ON "TITEMS" FOR EACH ROW EXECUTE FUNCTION FN_SET_UPDATED_AT();
CREATE TRIGGER "TRG_TINVENTORY_BALANCES_SET_UPDATED_AT" BEFORE UPDATE ON "TINVENTORY_BALANCES" FOR EACH ROW EXECUTE FUNCTION FN_SET_UPDATED_AT();
CREATE TRIGGER "TRG_TORDERS_SET_UPDATED_AT" BEFORE UPDATE ON "TORDERS" FOR EACH ROW EXECUTE FUNCTION FN_SET_UPDATED_AT();

-- Other Triggers (You would need to create the corresponding functions like FN_RECALC_ORDER_TOTAL, etc., similar to FN_SET_UPDATED_AT)
-- CREATE TRIGGER "TRG_TORDER_ITEMS_RECALC_ORDER_TOTAL" AFTER INSERT OR UPDATE OR DELETE ON "TORDER_ITEMS" FOR EACH ROW EXECUTE FUNCTION FN_RECALC_ORDER_TOTAL();
-- CREATE TRIGGER "TRG_TINVENTORY_TRANSACTIONS_APPLY" AFTER INSERT ON "TINVENTORY_TRANSACTIONS" FOR EACH ROW EXECUTE FUNCTION FN_INVENTORY_APPLY_TXN();

-- =============================================================================
-- VIEWS
-- =============================================================================

CREATE OR REPLACE VIEW "V_ITEM_CURRENT_PRICES" AS
WITH ranked_prices AS (
    SELECT
        p."ITEM_ID",
        p."SALES_CHANNEL_ID",
        p."PRICE",
        p."CURRENCY",
        p."VALID_FROM",
        p."VALID_TO",
        ROW_NUMBER() OVER(PARTITION BY p."ITEM_ID", p."SALES_CHANNEL_ID" ORDER BY p."VALID_FROM" DESC) as rn
    FROM
        "TPRODUCT_PRICES" p
    WHERE
        p."VALID_FROM" <= now()
        AND (p."VALID_TO" IS NULL OR p."VALID_TO" > now())
)
SELECT
    "ITEM_ID",
    "SALES_CHANNEL_ID",
    "PRICE",
    "CURRENCY",
    "VALID_FROM",
    "VALID_TO"
FROM
    ranked_prices
WHERE
    rn = 1;